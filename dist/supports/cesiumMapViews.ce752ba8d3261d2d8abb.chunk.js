(self.webpackChunkmapstore2=self.webpackChunkmapstore2||[]).push([[8384],{809438:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>c});var a=r(124852),n=r(288487),i=r(594397),o=r(112635),s=r(883953);const c=function(e){let{map:t,selectedId:r,views:c,apiRef:l=(()=>{}),showViewsGeometries:u,showClipGeometries:d,resources:p}=e;const g=c?.find((e=>e.id===r)),f=(0,a.useRef)(),C=(0,a.useRef)(),h=(0,a.useRef)(),y=(0,a.useRef)(),m=(0,a.useRef)();return(0,a.useEffect)((()=>{const e={options:{settings:[s.so.DESCRIPTION,s.so.POSITION,s.so.ANIMATION,s.so.MASK,s.so.GLOBE_TRANSLUCENCY,s.so.LAYERS_OPTIONS],unsupportedLayers:[],showClipGeometriesEnabled:!0},getView:()=>{const e=t.camera.positionCartographic,r=(0,s.GM)(e.height),a=t.camera.computeViewRectangle(t.scene.globe.ellipsoid,new n.Rectangle);let i=t.scene.globe.pick(new n.Ray(t.camera.position,t.camera.direction),t.scene);i||(i=n.Cartesian3.add(n.Cartesian3.clone(t.camera.position),n.Cartesian3.multiplyByScalar(n.Cartesian3.clone(t.camera.direction),1e5,new n.Cartesian3),new n.Cartesian3));const o=n.Cartographic.fromCartesian(new n.Cartesian3(i.x,i.y,i.z));return{zoom:r,center:{longitude:n.Math.toDegrees(o.longitude),latitude:n.Math.toDegrees(o.latitude),height:o.height},cameraPosition:{longitude:n.Math.toDegrees(e.longitude),latitude:n.Math.toDegrees(e.latitude),height:e.height},bbox:[n.Math.toDegrees(a.west),n.Math.toDegrees(a.south),n.Math.toDegrees(a.east),n.Math.toDegrees(a.north)]}},setView:e=>{const{destination:r,orientation:a}=((e,t)=>{let{center:r,cameraPosition:a,...i}=t;if(i.orientation&&i.position)return{destination:i.position,orientation:i.orientation};let s={position:n.Cartesian3.clone(e.camera.position),orientation:{heading:e.camera.heading,pitch:e.camera.pitch,roll:e.camera.roll}};const c=n.Cartographic.toCartesian(n.Cartographic.fromDegrees(r.longitude,r.latitude,r.height,new n.Cartographic)),l=n.Cartographic.toCartesian(n.Cartographic.fromDegrees(r.longitude,r.latitude,r.height+1,new n.Cartographic)),u=n.Cartographic.toCartesian(n.Cartographic.fromDegrees(a.longitude,a.latitude,a.height,new n.Cartographic)),d=n.Cartographic.toCartesian(n.Cartographic.fromDegrees(a.longitude,a.latitude,a.height+1,new n.Cartographic)),p=n.Cartesian3.subtract(u,c,new n.Cartesian3),g=n.Cartesian3.subtract(l,c,new n.Cartesian3),f=r.latitude>0&&Math.round((0,o.tj)(p,g))<=5?n.Cartesian3.subtract(u,d,new n.Cartesian3):n.Cartesian3.subtract(d,u,new n.Cartesian3);let C;C=n.Cartesian3.subtract(c,u,new n.Cartesian3),n.Cartesian3.normalize(C,C),e.camera.setView({destination:u,orientation:{direction:C,up:f}}),e.camera.setView({destination:u,orientation:{direction:C,up:f}});const h={destination:{x:e.camera.position.x,y:e.camera.position.y,z:e.camera.position.z},orientation:{heading:e.camera.heading,pitch:e.camera.pitch,roll:e.camera.roll}};return e.camera.setView({destination:s.position,orientation:s.orientation}),h})(t,e);t.camera.cancelFlight(),t.camera[e.flyTo?"flyTo":"setView"]({destination:r,orientation:a})},computeViewCoordinates:(r,a)=>{e.setView({...a,flyTo:!1});const i=t.camera.positionCartographic,o=(0,s.GM)(i.height),c=t.camera.computeViewRectangle(t.scene.globe.ellipsoid,new n.Rectangle);return{...a,zoom:o,bbox:[n.Math.toDegrees(c.west),n.Math.toDegrees(c.south),n.Math.toDegrees(c.east),n.Math.toDegrees(c.north)]}}};l(e)}),[t]),(0,a.useEffect)((()=>(t&&(f.current=new n.PrimitiveCollection({destroyPrimitives:!0}),t.scene.primitives.add(f.current),C.current=new n.BillboardCollection,t.scene.primitives.add(C.current),h.current=new n.LabelCollection,t.scene.primitives.add(h.current),y.current=(0,i.xB)(16,{stroke:"#ffffff",strokeWidth:2,fill:!1}),m.current=new n.GeoJsonDataSource("clipGeometriesDataSource")),()=>{t?.isDestroyed&&!t.isDestroyed()&&((0,i.U2)(t,f.current),f.current=null,(0,i.U2)(t,C.current),C.current=null,(0,i.U2)(t,h.current),h.current=null)})),[t]),(0,a.useEffect)((()=>((u||d)&&t?.isDestroyed&&!t.isDestroyed()&&c?.length>0&&(u&&c.forEach((e=>{const t=n.Cartographic.toCartesian(n.Cartographic.fromDegrees(e.cameraPosition.longitude,e.cameraPosition.latitude,e.cameraPosition.height)),a=n.Cartographic.toCartesian(n.Cartographic.fromDegrees(e.center.longitude,e.center.latitude,e.center.height)),o=e.id===r;f.current.add((0,i.c4)({color:o?"#ffcc33":"#ffffff",opacity:1,depthFailColor:"#000000",depthFailOpacity:0,width:1,dashLength:10,coordinates:[t,a]})),C.current.add({position:t,image:y.current,color:(0,i.KF)({color:o?"#ffcc33":"#ffffff"}),disableDepthTestDistance:Number.POSITIVE_INFINITY,allowPicking:!1}),h.current.add({position:t,text:e.title,font:"12px sans-serif",disableDepthTestDistance:Number.POSITIVE_INFINITY,fillColor:(0,i.KF)({color:"#ffffff"}),outlineColor:(0,i.KF)({color:"#000000"}),outlineWidth:4,style:n.LabelStyle.FILL_AND_OUTLINE,showBackground:!1,backgroundPadding:new n.Cartesian2(4,4),pixelOffset:new n.Cartesian2(0,-16),horizontalOrigin:n.HorizontalOrigin.CENTER,verticalOrigin:n.VerticalOrigin.BASELINE})})),d&&p.filter((e=>{const t=!!c?.find((t=>t?.terrain?.clippingLayerResourceId===e.id||t?.layers?.find((t=>t?.clippingLayerResourceId===e.id))));return!(!e?.data?.collection?.features||!t)})).forEach((e=>{(0,s.er)(e.data.collection.features).forEach((e=>{f.current.add((0,i.c4)({color:"#ff0000",opacity:1,width:3,dashLength:10,clampToGround:!0,coordinates:n.Cartesian3.fromDegreesArray(e.geometry.coordinates[0].reduce(((e,t)=>[...e,...t]),[]))})),h.current.add({position:n.Cartesian3.fromDegreesArray(e.geometry.coordinates[0][0])[0],text:e.id,font:"12px sans-serif",disableDepthTestDistance:Number.POSITIVE_INFINITY,fillColor:(0,i.KF)({color:"#ffffff"}),outlineColor:(0,i.KF)({color:"#000000"}),outlineWidth:4,style:n.LabelStyle.FILL_AND_OUTLINE,showBackground:!1,backgroundPadding:new n.Cartesian2(4,4),pixelOffset:new n.Cartesian2(0,-16),horizontalOrigin:n.HorizontalOrigin.CENTER,verticalOrigin:n.VerticalOrigin.BASELINE})}))})),t.scene.requestRender()),()=>{t?.isDestroyed&&!t.isDestroyed()&&(f.current?.removeAll(),C.current?.removeAll(),h.current?.removeAll(),t.scene.requestRender())})),[c,r,t,u,d,p]),(0,a.useEffect)((()=>{const e=t.scene.globe,{globeTranslucency:r={}}=g||{};e.translucency.frontFaceAlphaByDistance=new n.NearFarScalar(g?.globeTranslucency?.nearDistance??s.Ih.TRANSLUCENCY_NEAR_DISTANCE,0,g?.globeTranslucency?.farDistance??s.Ih.TRANSLUCENCY_FAR_DISTANCE,1);const a=r?.opacity??s.Ih.TRANSLUCENCY_OPACITY;return e.translucency.enabled=r?.enabled??!1,e.translucency.frontFaceAlphaByDistance.nearValue=a,e.translucency.frontFaceAlphaByDistance.farValue=r?.fadeByDistance?1:a,t.scene.requestRender(),()=>{t?.isDestroyed&&!t.isDestroyed()&&(e.translucency.enabled=!1)}}),[g?.globeTranslucency?.enabled,g?.globeTranslucency?.fadeByDistance,g?.globeTranslucency?.nearDistance,g?.globeTranslucency?.farDistance,g?.globeTranslucency?.opacity]),(0,a.useEffect)((()=>{const e=t.scene;return e.invertClassification=!!g?.mask?.enabled,e.invertClassificationColor=new n.Color(0,0,0,0),()=>{t?.isDestroyed&&!t.isDestroyed()&&(e.invertClassification=!1)}}),[g?.mask?.enabled]),(0,a.useEffect)((()=>{const e=t.scene.globe,r=p?.find((e=>e.id===g?.terrain?.clippingLayerResourceId))?.data,a=(0,s.er)(r?.collection?.features)?.find((e=>e.id===g?.terrain?.clippingPolygonFeatureId));return a?(0,i.ir)(a,!!g?.terrain?.clippingPolygonUnion,g?.terrain?.clipOriginalGeometry).then((r=>{e.clippingPlanes=new n.ClippingPlaneCollection({planes:r,edgeWidth:1,edgeColor:n.Color.WHITE,unionClippingRegions:!!g?.terrain?.clippingPolygonUnion}),e.backFaceCulling=!0,e.showSkirts=!0,t.scene.requestRender()})):(e.clippingPlanes=new n.ClippingPlaneCollection({planes:[]}),t.scene.requestRender()),()=>{t?.isDestroyed&&!t.isDestroyed()&&(e.clippingPlanes=new n.ClippingPlaneCollection({planes:[]}),t.scene.requestRender())}}),[g?.terrain?.clippingPolygonFeatureId,g?.terrain?.clippingPolygonUnion,g?.terrain?.clipOriginalGeometry,g?.terrain?.clippingLayerResourceId,p]),null}},112635:(e,t,r)=>{"use strict";r.d(t,{eN:()=>n,tj:()=>i,Ys:()=>o,bj:()=>s,Qg:()=>c});var a=r(288487);function n(e,t){const r=a.Cartesian3.subtract(t,e,new a.Cartesian3),n=a.Cartesian3.multiplyByScalar(r,.5,new a.Cartesian3);return a.Cartesian3.add(e,n,new a.Cartesian3)}function i(e,t){const r=a.Cartesian3.normalize(e,new a.Cartesian3),n=a.Cartesian3.normalize(t,new a.Cartesian3),i=a.Cartesian3.dot(r,n);return a.Math.toDegrees(Math.acos(i))}function o(e){return e.map(((t,r)=>{const n=e[r-1],o=e[r+1];return n&&o?i(a.Cartesian3.subtract(n,t,new a.Cartesian3),a.Cartesian3.subtract(o,t,new a.Cartesian3)):null})).filter((e=>null!==e))}function s(e){return new a.Cartesian3((e[0].x+e[1].x+e[2].x)/3,(e[0].y+e[1].y+e[2].y)/3,(e[0].z+e[1].z+e[2].z)/3)}function c(e,t){return e.map(((r,n)=>{const o=e[n-1],s=e[n+1];if(o&&s){const e=function(e,t){const r=a.Cartesian3.normalize(e,new a.Cartesian3),n=a.Cartesian3.normalize(t,new a.Cartesian3);return a.Cartesian3.cross(r,n,new a.Cartesian3)}(a.Cartesian3.subtract(o,r,new a.Cartesian3),a.Cartesian3.subtract(s,r,new a.Cartesian3)),n=-Math.sign(a.Cartesian3.dot(e,a.Cartesian3.subtract(r,t,new a.Cartesian3),new a.Cartesian3));return i(a.Cartesian3.multiplyByScalar(e,n,new a.Cartesian3),r)}return null})).filter((e=>null!==e))}},594397:(e,t,r)=>{"use strict";r.d(t,{KF:()=>c,c4:()=>l,XI:()=>u,U2:()=>d,xB:()=>p,ir:()=>g});var a=r(288487),n=r(65792),i=r.n(n),o=r(545578),s=r.n(o);const c=e=>{let{color:t,opacity:r}=e;const[n,o,s,c]=i()(t).gl();return void 0!==r?new a.Color(n,o,s,r):new a.Color(n,o,s,c)},l=e=>{let{coordinates:t,width:r=4,color:n="#ff00ff",opacity:i=1,depthFailColor:o,depthFailOpacity:s,dashLength:l,clampToGround:u}=e;return new a[u?"GroundPolylinePrimitive":"Primitive"]({geometryInstances:new a.GeometryInstance({geometry:u?new a.GroundPolylineGeometry({positions:[...t],width:r}):new a.PolylineGeometry({positions:[...t],width:r,arcType:a.ArcType.NONE})}),appearance:new a.PolylineMaterialAppearance({material:l?a.Material.fromType("PolylineDash",{color:c({color:n,opacity:i}),dashLength:l}):a.Material.fromType("Color",{color:c({color:n,opacity:i})})}),...o&&{depthFailAppearance:new a.PolylineMaterialAppearance({material:l?a.Material.fromType("PolylineDash",{color:c({color:o,opacity:s}),dashLength:l}):a.Material.fromType("Color",{color:c({color:o,opacity:s})})})},allowPicking:!1,asynchronous:!1})},u=e=>{let{coordinates:t,color:r="#ff00ffAA",opacity:n=1,depthFailColor:i,depthFailOpacity:o}=e;return new a.Primitive({geometryInstances:new a.GeometryInstance({geometry:new a.PolygonGeometry({polygonHierarchy:new a.PolygonHierarchy([...t]),perPositionHeight:!0})}),appearance:new a.MaterialAppearance({material:a.Material.fromType("Color",{color:c({color:r,opacity:n})}),faceForward:!0}),...i&&{depthFailAppearance:new a.MaterialAppearance({material:a.Material.fromType("Color",{color:c({color:i,opacity:o})}),faceForward:!0})},allowPicking:!1,asynchronous:!1})},d=(e,t)=>{e?.scene?.primitives&&t&&!t.isDestroyed()&&(t.removeAll(),e.scene.primitives.remove(t))},p=function(e){let{stroke:t,strokeWidth:r=1,fill:a="#ffffff"}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=t?e+2*r:e,i=document.createElement("canvas");i.setAttribute("width",n),i.setAttribute("height",n);const o=i.getContext("2d");return o.beginPath(),a&&(o.fillStyle="#ffffff"),t&&(o.strokeStyle=t,o.lineWidth=r),o.arc(n/2,n/2,e/2,0,2*Math.PI),a&&o.fill(),t&&o.stroke(),i},g=(e,t,n)=>r.e(9706).then(r.bind(r,979706)).then((i=>{const o=i.default,c=n?e:o(e),{geometry:l}=c;return(u=[...l?.coordinates?.[0]||[]],r.e(4220).then(r.bind(r,574220)).then((e=>(0,e.default)({type:"Feature",geometry:{type:"LineString",coordinates:u},properties:{}})?u:[...u].reverse()))).then((e=>{const r=s()(t?e:e.reverse(),(e=>`${e[0]}${e[1]}`)).map((e=>{let[t,r,n=0]=e;return a.Cartesian3.fromDegrees(t,r,n)})),n=r.length,i=[];for(let e=0;e<n;++e){const t=(e+1)%n;let o=a.Cartesian3.add(r[e],r[t],new a.Cartesian3);o=a.Cartesian3.multiplyByScalar(o,.5,o);const s=a.Cartesian3.normalize(o,new a.Cartesian3);let c=a.Cartesian3.subtract(r[t],o,new a.Cartesian3);c=a.Cartesian3.normalize(c,c);let l=a.Cartesian3.cross(c,s,new a.Cartesian3);l=a.Cartesian3.normalize(l,l);const u=new a.Plane(l,0),d=a.Plane.getPointDistance(u,o);i.push(new a.ClippingPlane(l,d))}return i}));var u}))}}]);