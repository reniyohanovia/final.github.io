(self.webpackChunkmapstore2=self.webpackChunkmapstore2||[]).push([[3436],{876504:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>M});var s=r(45697),o=r.n(s),i=r(124852),a=r.n(i),n=r(727418),m=r.n(n),l=r(845243),p=r.n(l),h=r(414293),u=r.n(h),c=r(512571),d=r.n(c),g=r(351546),y=r(556233);function w(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}r(921787),r(451172);let f={km:2,ha:2,m:2,mi:2,ac:2,yd:0,ft:0,nm:2,sqkm:2,sqha:2,sqm:2,sqmi:2,sqac:2,sqyd:2,sqft:2,sqnm:2};p().getMeasureWithTreshold=(e,t,r,s,o,i,a)=>e>t?p().GeometryUtil.formattedNumber((0,y.Ov)(e,r,s),o[s])+" "+a:p().GeometryUtil.formattedNumber(e,o[r])+" "+i;const b=p().GeometryUtil.readableDistance;p().GeometryUtil.readableDistance=function(e,t,r,s,o,i){if(!i)return b.apply(null,arguments);if("Bearing"===i.geomType)return i.bearing;const a=p().Util.extend({},f,o),{unit:n,label:m}=i.uom.length;let l=p().GeometryUtil.formattedNumber((0,y.Ov)(e,"m",n),a[n])+" "+m;return i.useTreshold&&(t&&(l=p().getMeasureWithTreshold(e,1e3,"m","km",a,"m","km")),"mi"===n&&(l=p().getMeasureWithTreshold((0,y.Ov)(e,"m","yd"),1760,"yd","mi",a,"yd","mi"))),l};const L=p().GeometryUtil.readableArea;p().GeometryUtil.readableArea=function(e,t,r,s){if(!s)return L.apply(null,arguments);const{unit:o,label:i}=s.uom.area,a=p().Util.extend({},f,r);let n=p().GeometryUtil.formattedNumber((0,y.Ov)(e,"sqm",o),a[o])+" "+i;return s.useTreshold&&(t&&(n=p().getMeasureWithTreshold(e,1e6,"sqm","sqkm",a,"m²","km²")),"sqmi"===o&&(n=p().getMeasureWithTreshold((0,y.Ov)(e,"sqm","sqyd"),3097600,"sqyd","sqmi",a,"yd²","mi²"))),n};const T=p().Draw.Polygon.prototype._getMeasurementString;p().Draw.Polygon.prototype._getMeasurementString=function(){if(!this.options.uom)return T.apply(this,arguments);let e=this._area,t="";if(!e&&!this.options.showLength)return null;if(this.options.showLength&&(t=p().Draw.Polyline.prototype._getMeasurementString.call(this)),e){const r={uom:this.options.uom,useTreshold:this.options.useTreshold};t+=this.options.showLength?"<br>":""+p().GeometryUtil.readableArea(e,this.options.metric,this.options.precision,r)}return t};const C=p().Draw.Polyline.prototype._getMeasurementString;p().Draw.Polyline.prototype._getMeasurementString=function(){if(!this.options.uom)return C.apply(this,arguments);let e,t=this._currentLatLng,r=this._markers[this._markers.length-1].getLatLng();e=p().GeometryUtil.isVersion07x()?r&&t&&t.distanceTo?this._measurementRunningTotal+t.distanceTo(r)*(this.options.factor||1):this._measurementRunningTotal||0:r&&t?this._measurementRunningTotal+this._map.distance(t,r)*(this.options.factor||1):this._measurementRunningTotal||0;const s={uom:this.options.uom,useTreshold:this.options.useTreshold,geomType:this.options.geomType,bearing:this.options.bearing?(0,y.rp)(this.options.bearing,this.options.trueBearing):0};return p().GeometryUtil.readableDistance(e,this.options.metric,this.options.feet,this.options.nautic,this.options.precision,s)};class v extends a().Component{constructor(){super(...arguments),w(this,"onDrawStart",(()=>{this.props.map.off("click",this.restartDrawing,this),this.removeArcLayer(),this.props.map.doubleClickZoom&&this.props.map.doubleClickZoom.disable(),this.drawing=!0})),w(this,"onDrawCreated",(e=>{this.drawing=!1,this.props.map.addLayer(e.layer),this.lastLayer=e.layer;let t=this.lastLayer&&this.lastLayer.toGeoJSON()||{};if("LineString"===this.props.measurement.geomType&&(t=m()({},t,{geometry:m()({},t.geometry,{coordinates:(0,g.transformLineToArcs)(t.geometry.coordinates)})})),"Point"===this.props.measurement.geomType){let e=this.drawControl._marker.getLatLng(),r={x:e.lng,y:e.lat,srs:"EPSG:4326"},s=m()({},this.props.measurement,{point:r,feature:t});this.props.changeMeasurementState(s)}else{let e=m()({},this.props.measurement,{feature:t});this.props.changeMeasurementState(e)}this.props.measurement.lineMeasureEnabled&&this.lastLayer&&this.addArcsToMap([t]),setTimeout((()=>{this.props.map.off("click",this.restartDrawing,this),this.props.map.on("click",this.restartDrawing,this)}),100)})),w(this,"onDrawVertex",(()=>{let e=this.drawControl._markers||[];"Bearing"===this.props.measurement.geomType&&e.length>=2?setTimeout((()=>{this.drawControl._markers=d()(this.drawControl._markers,0,2),this.drawControl._poly._latlngs=d()(this.drawControl._poly._latlngs,0,2),this.drawControl._poly._originalPoints=d()(this.drawControl._poly._originalPoints,0,2),this.updateMeasurementResults(),this.drawControl._finishShape(),this.drawControl.disable()}),100):this.updateMeasurementResults()})),w(this,"addArcsToMap",(e=>{this.removeLastLayer();let t=e.map((e=>m()({},e,{geometry:m()({},e.geometry,{coordinates:(0,g.transformLineToArcs)(e.geometry.coordinates)})})));this.arcLayer=p().geoJson(t,{style:{color:"#ffcc33",opacity:1,weight:1,fillColor:"#ffffff",fillOpacity:.2,clickable:!1}}),this.props.map.addLayer(this.arcLayer),t&&t.length>0&&this.arcLayer.addData(t)})),w(this,"updateMeasurementResults",(()=>{if(!this.drawing||!this.drawControl)return;let e=0,t=0,r=0,s=this.drawControl._currentLatLng;if("LineString"===this.props.measurement.geomType&&this.drawControl._markers&&this.drawControl._markers.length>1){const t=this.drawControl._markers.reduce(((e,t)=>{const{lng:r,lat:s}=t.getLatLng();return[...e,[r,s]]}),[]);e=(0,g.calculateDistance)(t,this.props.measurement.lengthFormula)}else if("Polygon"===this.props.measurement.geomType&&this.drawControl._poly){let e=[...this.drawControl._poly.getLatLngs(),s];t=p().GeometryUtil.geodesicArea(e)}else"Bearing"===this.props.measurement.geomType&&this.drawControl._markers&&this.drawControl._markers.length>0&&(r=this.calculateBearing());let o=m()({},this.props.measurement,{point:null,len:e,area:t,bearing:r});this.props.changeMeasurementState(o)})),w(this,"restartDrawing",(()=>{this.props.map.off("click",this.restartDrawing,this),this.props.map.doubleClickZoom&&this.props.map.doubleClickZoom.enable(),this.props.map.removeLayer(this.lastLayer),this.drawControl.enable(),this.drawing=!0})),w(this,"addDrawInteraction",(e=>{if(this.removeDrawInteraction(),this.props.map.on("draw:created",this.onDrawCreated,this),this.props.map.on("draw:drawstart",this.onDrawStart,this),this.props.map.on("draw:drawvertex",this.onDrawVertex,this),this.props.map.on("mousemove",this.updateBearing,this),this.props.updateOnMouseMove&&this.props.map.on("mousemove",this.updateMeasurementResults,this),"Point"===e.measurement.geomType)this.drawControl=new(p().Draw.Marker)(this.props.map,{repeatMode:!1});else if("LineString"===e.measurement.geomType||"Bearing"===e.measurement.geomType){const t=this.uomLengthOptions(e);this.drawControl=new(p().Draw.Polyline)(this.props.map,{shapeOptions:{color:"#ffcc33",weight:2},showLength:!0,useTreshold:e.useTreshold,uom:e.uom,geomType:e.measurement.geomType,...t,repeatMode:!1,icon:new(p().DivIcon)({iconSize:new(p().Point)(8,8),className:"leaflet-div-icon leaflet-editing-icon"}),touchIcon:new(p().DivIcon)({iconSize:new(p().Point)(8,8),className:"leaflet-div-icon leaflet-editing-icon leaflet-touch-icon"}),trueBearing:e.measurement.trueBearing})}else if("Polygon"===e.measurement.geomType){const t=this.uomAreaOptions(e);this.drawControl=new(p().Draw.Polygon)(this.props.map,{shapeOptions:{color:"#ffcc33",weight:2,fill:"rgba(255, 255, 255, 0.2)"},showArea:!0,allowIntersection:!1,showLength:!1,repeatMode:!1,useTreshold:e.useTreshold,uom:e.uom,geomType:e.measurement.geomType,...t,icon:new(p().DivIcon)({iconSize:new(p().Point)(8,8),className:"leaflet-div-icon leaflet-editing-icon"}),touchIcon:new(p().DivIcon)({iconSize:new(p().Point)(8,8),className:"leaflet-div-icon leaflet-editing-icon leaflet-touch-icon"})})}this.drawControl.enable()})),w(this,"removeDrawInteraction",(()=>{null!==this.drawControl&&void 0!==this.drawControl&&(this.drawControl.disable(),this.drawControl=null,this.removeLastLayer(),this.removeArcLayer(),this.props.map.off("draw:created",this.onDrawCreated,this),this.props.map.off("draw:drawstart",this.onDrawStart,this),this.props.map.off("draw:drawvertex",this.onDrawVertex,this),this.props.map.off("mousemove",this.updateBearing,this),this.props.map.off("click",this.restartDrawing,this),this.props.updateOnMouseMove&&this.props.map.off("mousemove",this.updateMeasurementResults,this),this.props.map.doubleClickZoom&&this.props.map.doubleClickZoom.enable())})),w(this,"removeLastLayer",(()=>{this.lastLayer&&this.props.map.removeLayer(this.lastLayer)})),w(this,"removeArcLayer",(()=>{this.arcLayer&&this.props.map.removeLayer(this.arcLayer)})),w(this,"uomLengthOptions",(e=>{let{unit:t}=e.uom.length;return{metric:"m"===t||"km"===t,nautic:"nm"===t,feet:"ft"===t}})),w(this,"uomAreaOptions",(e=>{let{unit:t}=e.uom.area;return{metric:"sqm"===t||"sqkm"===t,nautic:"sqnm"===t,feet:"sqft"===t}})),w(this,"calculateBearing",(()=>{let e,t=this.drawControl._currentLatLng,r=0,s=this.drawControl._markers,o=[s[0].getLatLng().lng,s[0].getLatLng().lat];return 1===s.length?e=[t.lng,t.lat]:2===s.length&&(e=[s[1].getLatLng().lng,s[1].getLatLng().lat]),o=(0,g.reproject)(o,"EPSG:4326",this.props.projection),e=(0,g.reproject)(e,"EPSG:4326",this.props.projection),r=(0,g.calculateAzimuth)(o,e,this.props.projection),r})),w(this,"updateBearing",(()=>{if("Bearing"===this.props.measurement.geomType&&this.drawControl._markers&&this.drawControl._markers.length>0){const e=this.props.measurement&&this.props.measurement.trueBearing;this.drawControl.setOptions({bearing:this.calculateBearing(),trueBearing:e})}}))}UNSAFE_componentWillMount(){this.props.measurement?.geomType&&(this.props.measurement?.lineMeasureEnabled||this.props.measurement?.areaMeasureEnabled||this.props.measurement?.bearingMeasureEnabled)&&u()(this.drawControl)&&this.props.enabled&&this.addDrawInteraction(this.props)}UNSAFE_componentWillReceiveProps(e){if((e&&e.uom&&e.uom.length&&e.uom.length.unit)!==(this.props&&this.props.uom&&this.props.uom.length&&this.props.uom.length.unit)&&this.drawControl){const t=this.uomLengthOptions(e);this.drawControl.setOptions({...t,uom:e.uom})}if((e&&e.uom&&e.uom.area&&e.uom.area.unit)!==(this.props&&this.props.uom&&this.props.uom.area&&this.props.uom.area.unit)&&this.drawControl){const t=this.uomAreaOptions(e);this.drawControl.setOptions({...t,uom:e.uom})}(e.measurement.geomType&&e.measurement.geomType!==this.props.measurement.geomType||e.measurement.geomType&&this.props.measurement.geomType&&(e.measurement.lineMeasureEnabled||e.measurement.areaMeasureEnabled||e.measurement.bearingMeasureEnabled)&&!this.props.enabled&&e.enabled)&&this.addDrawInteraction(e),e.measurement.geomType||this.removeDrawInteraction()}componentWillUnmount(){this.removeDrawInteraction()}render(){var e=this.props.messages||!!this.context.messages&&this.context.messages.drawLocal;return e&&(p().drawLocal=e),null}}w(v,"displayName","MeasurementSupport"),w(v,"propTypes",{map:o().object,metric:o().bool,feet:o().bool,nautic:o().bool,enabled:o().bool,useTreshold:o().bool,projection:o().string,measurement:o().object,changeMeasurementState:o().func,messages:o().object,uom:o().object,updateOnMouseMove:o().bool}),w(v,"contextTypes",{messages:o().object}),w(v,"defaultProps",{uom:{length:{unit:"m",label:"m"},area:{unit:"sqm",label:"m²"}},updateOnMouseMove:!1,metric:!0,nautic:!1,useTreshold:!1,feet:!1});const M=v}}]);