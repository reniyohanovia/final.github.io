(self.webpackChunkmapstore2=self.webpackChunkmapstore2||[]).push([[8051],{28854:(e,a,t)=>{"use strict";t.r(a),t.d(a,{default:()=>v});var r=t(45697),p=t.n(r),n=t(124852),o=t.n(n),l=t(630294),s=t(804504),m=t(12838),i=t(710187),y=t(101092),u=t(171703),c=t(727418),f=t.n(c);function b(e,a,t){return(a=function(e){var a=function(e,a){if("object"!=typeof e||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof a?a:String(a)}(a))in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}class T extends o().Component{render(){return o().createElement("div",{id:"mapstore-maptype"},o().createElement(l.Label,null,o().createElement(s.Z,{msgId:"manager.mapTypes_combo"})),o().createElement(l.FormGroup,{bsSize:"small"},o().createElement(l.FormControl,{value:this.props.mapType,componentClass:"select",ref:"mapType",onChange:this.props.onChangeMapType},this.props.mapTypes.map((e=>o().createElement("option",{value:e.key,key:e.key},e.label))))))}}b(T,"propTypes",{style:p().object,className:p().object,mapType:p().string,mapTypes:p().array,onChangeMapType:p().func}),b(T,"defaultProps",{mapType:"leaflet",onChangeMapType:()=>{},mapTypes:[{key:"leaflet",label:"Leaflet"},{key:"openlayers",label:"OpenLayers"},{key:"cesium",label:"Cesium"}]});const g=(0,u.connect)((e=>({mapType:(0,y.$v)(e)})),{onChangeMapType:(0,m.qC)(i.gj,(e=>e.target.value))})(T),v={MapTypePlugin:f()(g,{OmniBar:{name:"MapType",tool:!0,position:6,priority:1}}),reducers:{maptype:t(962565).Z}}}}]);