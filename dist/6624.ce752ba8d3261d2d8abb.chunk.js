(self.webpackChunkmapstore2=self.webpackChunkmapstore2||[]).push([[6624],{36624:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>H});var r=s(124852),o=s.n(r),i=s(45697),n=s.n(i),a=s(59854),l=s.n(a),h=s(227361),m=s.n(h),p=s(618446),u=s.n(p),g=s(843624),c=s.n(g),d=s(610928),y=s.n(d),v=s(414293),L=s.n(v),f=s(351546),T=s(556233),b=s(521923),E=s(923715),O=s(719648),w=s(782527),P=s(944538),S=s(15265),M=s(193409),x=s(973410),C=s(429902),V=s(623068),I=s(831219),j=s(898185),F=s(120767),D=s(409371),G=s(372445),A=s(169141),B=s(756834),N=s(870295);function k(e,t,s){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}const Z=e=>e.getView().getProjection().getCode();class H extends o().Component{constructor(){var e;super(...arguments),e=this,k(this,"getLength",((e,t)=>{if("Bearing"===t.measurement.geomType&&e.length>1)return(0,f.calculateAzimuth)(e[0],e[1],Z(t.map));const s=this.reprojectedCoordinatesIn4326(e);return(0,f.calculateDistance)(s,t.measurement.lengthFormula)})),k(this,"getArea",(e=>this.calculateGeodesicArea(e.getLinearRing(0).getCoordinates()))),k(this,"cleanupMeasures",(()=>{this.removeDrawInteraction(),this.removeMeasureTooltips(),this.removeSegmentLengthOverlays(),this.textLabels=[],this.segmentLengths=[],this.props.map.removeLayer(this.measureLayer),this.vector=null,this.measureLayer=null,this.source&&(this.source.clear(),this.source=null)})),k(this,"updateInteraction",((e,t)=>{t.some((e=>m()(e,"properties.disabled")))?this.removeDrawInteraction():null===this.drawInteraction&&(this.restoreDrawState(),this.addDrawInteraction(e))})),k(this,"convertPolyToLineFeature",(function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],s=[];const r=(0,T.wd)(t[0]);return r&&(0,T.wd)(t[1])?s=e.reprojectedCoordinatesFrom4326([t[0],t[1]]):r&&(s=e.reprojectedCoordinatesFrom4326([t[0]])),s.length?new P.Z(s):null})),k(this,"modifyFeatures",(e=>{let{currentFeature:t,features:s}=e.measurement||{},r=s[t]?.geometry?.coordinates||[],o=s[t]?.geometry?.type||"";"Polygon"===o&&(r=r?.[0]||[]);const i=r.length,n=r.some((e=>!(0,T.wd)(e)));let a,l;if(!n&&"LineString"===o&&i<2){const e=this.reprojectedCoordinatesFrom4326(r);a=new P.Z(e),s[t]=(0,b.t8)("properties.disabled",!0,(0,b.t8)("geometry.coordinates",[...r,["",""]],s[t]))}else!n&&"Polygon"===o&&i<=4&&u()(r[i-1],r[i-2])&&(r.splice(2,0,["",""]),r.pop(),s[t]=(0,b.t8)("properties.disabled",!0,(0,b.t8)("geometry.coordinates",[r],s[t])));return"Polygon"===o&&i<=4&&(a=this.convertPolyToLineFeature(r)),!n&&u()(r[i-1],r[i-2])&&s[t]?.geometry?.coordinates?.[0]?.pop(),a&&(this.source.clear(),l=new V.Z({geometry:a})),[s,l]})),k(this,"updateFeatures",(e=>{const[t,s]=this.modifyFeatures(e)||[],r=this.source.getFeatures();this.removeMeasureTooltips(),this.removeSegmentLengthOverlays(),this.source.clear(),this.textLabels=[],this.segmentLengths=[];let o=null;this.updateInteraction(e,t);const i=t.map(((t,i)=>{if(m()(t,"properties.disabled"))return o=i,[t,r&&r[i]&&r[i].getGeometry()||s?.getGeometry()];const n=t.geometry.type,a=m()(t,"properties.values",[]),l="bearing"===(a[0]||{}).type||!(a[0]||{}).type&&e.measurement.bearingMeasureEnabled,h="Polygon"===n?t.geometry.coordinates[0]:t.geometry.coordinates;let p=h;"LineString"===n&&h.length>=2&&!l&&(p=(0,f.transformLineToArcs)(h));const u=this.reprojectedCoordinatesFrom4326(p),g="Polygon"===n?new S.ZP([u]):new P.Z(u),c={Point:()=>h,LineString:()=>l?(0,f.calculateAzimuth)(h[0],h[1],"EPSG:4326"):(0,f.calculateDistance)(h,e.measurement.lengthFormula),Polygon:()=>this.getArea(g)},d={LineString:()=>this.formatLengthValue(l?(0,f.calculateAzimuth)(h[0],h[1],"EPSG:4326"):(0,f.calculateDistance)(h,e.measurement.lengthFormula),e.uom,l,e.measurement.trueBearing),Polygon:()=>this.formatAreaValue(this.getArea(g),e.uom)},v=this.reprojectedCoordinatesFrom4326(h);if(!l)for(let t=0;t<h.length-1;++t){this.createSegmentLengthOverlay();const s=(0,f.calculateAzimuth)(h[t],h[t+1],"EPSG:4326"),r=(0,f.calculateDistance)([h[t],h[t+1]],e.measurement.lengthFormula),o=this.props.measurement&&this.props.measurement.showLengthAndBearingLabel&&" | "+(0,T.rp)(s,this.props.measurement.trueBearing)||"",i=this.formatLengthValue(r,e.uom,l)+o;y()(this.segmentOverlayElements).innerHTML=i;let a=(0,f.midpoint)(h[t],h[t+1],!0),m=(0,f.midpoint)(v[t],v[t+1],!0);if("LineString"===n){const e=p[100*t+50];e&&(a=e,m=(0,f.pointObjectToArray)((0,f.reproject)(e,"EPSG:4326",Z(this.props.map))))}y()(this.segmentOverlays).setPosition(m),this.textLabels[this.segmentOverlays.length-1]={text:i,position:a},this.segmentLengths[this.segmentOverlays.length-1]={value:r,type:l?"bearing":"length"}}if(this.createMeasureTooltip(),"Polygon"===n&&this.createMeasureTooltip(),this.tooltipCoord="LineString"===n?y()(v):this.tooltipCoord=g.getInteriorPoint().getCoordinates(),y()(this.measureTooltipElements).innerHTML=d[n](),y()(this.measureTooltips).setPosition(this.tooltipCoord),this.outputValues[this.measureTooltipElements.length-1]={value:c[n](),type:"Polygon"===n?"area":l?"bearing":"length"},"Polygon"===n){const t=(0,f.calculateDistance)(h,e.measurement.lengthFormula);this.measureTooltipElements[this.measureTooltipElements.length-2].innerHTML=this.formatLengthValue(t,e.uom,!1),this.outputValues[this.measureTooltipElements.length-2]={value:t,type:"length"},this.perimeterTooltipCoord=y()(v),this.measureTooltips[this.measureTooltipElements.length-2].setPosition(this.perimeterTooltipCoord),this.measureTooltips[this.measureTooltipElements.length-2].setOffset([0,-7])}let L={...t};return L.properties=t.properties?{...t.properties}:{},L.properties.values=[{value:(c[n]||(()=>null))(),formattedValue:(d[n]||(()=>null))(),position:"Polygon"===n?(0,f.pointObjectToArray)((0,f.reproject)(g.getInteriorPoint().getCoordinates(),Z(e.map),"EPSG:4326")):y()(h),type:(a[0]||{}).type||(e.measurement.pointMeasureEnabled?"point":e.measurement.lineMeasureEnabled?"length":e.measurement.areaMeasureEnabled?"area":e.measurement.bearingMeasureEnabled?"bearing":void 0)},..."Polygon"===n?[{value:(0,f.calculateDistance)(h,e.measurement.lengthFormula),formattedValue:this.formatLengthValue((0,f.calculateDistance)(h,e.measurement.lengthFormula),e.uom,!1),position:y()(h),uom:e.uom,type:"length"}]:[]],[L,g]})),n=i.map((e=>e[0])),a=i.map((e=>e[1]));this.source.addFeatures(a.filter((e=>!!e)).map((e=>new V.Z({geometry:e}))));let l=[...this.textLabels];n.map(((e,t)=>{const s=!!e.properties?.values?.find((e=>"bearing"===e.type)),r="Polygon"===e.geometry.type,i=r||s?0:1,n=r?e.geometry.coordinates[0]:e.geometry.coordinates,a=n.some((e=>!(0,T.wd)(e))),h=r?n.length-1:s?0:n.length;return e.geometry.textLabels=null!==o&&o===t&&a?e.geometry.textLabels.concat([{text:"0"}]):l.splice(0,h-i)||[],e})),this.props.changeGeometry(n),this.props.setTextLabels([...this.textLabels]);for(let e=0;e<this.measureTooltipElements.length;++e)this.measureTooltipElements[e]&&(this.measureTooltipElements[e].className="tooltip tooltip-static");for(let e=0;e<this.segmentOverlayElements.length;++e)this.segmentOverlayElements[e]&&(this.segmentOverlayElements[e].className="segment-overlay segment-overlay-static")})),k(this,"updateMeasures",(e=>{const t=t=>{let{type:s,value:r}=t;return"length"===s?this.formatLengthValue(r,e.uom,!1):"area"===s?this.formatAreaValue(r,e.uom):this.formatLengthValue(r,e.uom,!0,e.measurement.trueBearing)};this.outputValues=this.outputValues||[],this.segmentOverlayElements=this.segmentOverlayElements||[],this.textLabels=this.textLabels||[];for(let e=0;e<this.outputValues.length;++e)this.outputValues[e]&&(this.measureTooltipElements[e].innerHTML=t(this.outputValues[e]));for(let e=0;e<this.segmentOverlayElements.length;++e){if(!this.segmentOverlayElements[e])continue;const s=t(this.segmentLengths[e]);let r=this.textLabels[e].text;const o=r.indexOf(" | ");r=r.replace(r.substring(0,-1!==o?o:r.length),s),this.segmentOverlayElements[e].innerHTML=r,this.textLabels[e].text=r}this.drawing||this.props.setTextLabels([...this.textLabels]);const s=(e.measurement.features||[]).map((e=>({...e,...e.properties?{properties:{...e.properties,values:(e.properties.values||[]).map((e=>({...e,formattedValue:t({type:e.type,value:e.value})})))}}:{}})));this.props.changeGeometry(s)})),k(this,"addFeature",(e=>{let t=!1;this.source||(this.source=new x.Z,t=!0);let s=(0,f.reprojectGeoJson)(e,"EPSG:4326",Z(this.props.map)).geometry;const r=new V.Z({geometry:(0,w.y7)(s)});this.source.addFeature(r),t&&this.measureLayer.setSource(this.source)})),k(this,"resetGeometry",(()=>{this.source.clear(),this.props.resetGeometry()})),k(this,"saveDrawState",(()=>{this.savedDrawState={textLabels:this.textLabels.slice(),segmentLengths:this.segmentLengths.slice(),measureTooltipsLength:this.measureTooltips?.length??0,segmentOverlaysLength:this.segmentOverlays?.length??0}})),k(this,"discardDrawState",(()=>{this.savedDrawState=null})),k(this,"restoreDrawState",(()=>{if(this.savedDrawState){this.textLabels=this.savedDrawState.textLabels,this.segmentLengths=this.savedDrawState.segmentLengths;for(let e=this.savedDrawState.measureTooltipsLength;e<this.measureTooltips.length;++e)this.props.map.removeOverlay(this.measureTooltips[e]),this.measureTooltipElements[e].parentNode.removeChild(this.measureTooltipElements[e]);for(let e=this.savedDrawState.segmentOverlaysLength;e<this.segmentOverlays.length;++e)this.props.map.removeOverlay(this.segmentOverlays[e]),this.segmentOverlayElements[e].parentNode.removeChild(this.segmentOverlayElements[e]);this.measureTooltips.splice(this.savedDrawState.measureTooltipsLength),this.measureTooltipElements.splice(this.savedDrawState.measureTooltipsLength),this.outputValues.splice(this.savedDrawState.measureTooltipsLength),this.segmentOverlays.splice(this.savedDrawState.segmentOverlaysLength),this.segmentOverlayElements.splice(this.savedDrawState.segmentOverlaysLength),this.curPolygonLength=void 0,this.curLineStringLength=void 0,this.savedDrawState=null}})),k(this,"addDrawInteraction",(e=>{let t,s,{startEndPoint:r}=e.measurement;if(this.continueLineMsg=(0,O.S$)(this.context.messages,"measureSupport.continueLine"),this.continuePolygonMsg=(0,O.S$)(this.context.messages,"measureSupport.continuePolygon"),this.drawInteraction&&this.removeDrawInteraction(),!this.vector){this.source=new x.Z;let t=[new I.default({fill:new j.default({color:"rgba(255, 255, 255, 0.2)"}),stroke:new F.default({color:"#ffcc33",width:2}),image:new D.default({radius:7,fill:new j.default({color:"#ffcc33"})})})],s=[],o=r||!0===r;if(o||void 0===r){let t=o?void 0===r?{}:r:e.startEndPoint;s=(0,E.rm)(t.startPointOptions,t.endPointOptions)}const i=[...t,...s];this.vector=new C.Z({source:this.source,zIndex:1e6,style:i}),this.props.map.addLayer(this.vector)}s="Bearing"===e.measurement.geomType?"LineString":e.measurement.geomType,t=new G.ZP({source:new x.Z,type:s,style:new I.default({fill:new j.default({color:"rgba(255, 255, 255, 0.2)"}),stroke:new F.default({color:"rgba(0, 0, 0, 0.5)",lineDash:[10,10],width:2}),image:new D.default({radius:5,stroke:new F.default({color:"rgba(0, 0, 0, 0.7)"}),fill:new j.default({color:"rgba(255, 255, 255, 0.2)"})})})}),this.clickListener=this.props.map.on("click",(()=>this.updateMeasurementResults(this.props))),this.props.updateOnMouseMove&&this.props.map.on("pointermove",(()=>this.updateMeasurementResults(this.props))),this.props.map.on("pointermove",(e=>this.pointerMoveHandler(e))),t.on("drawstart",(e=>{this.sketchFeature=e.feature,this.drawing=!0,this.textId=this.props.measurement?.features?.length||0,this.textLabels||(this.textLabels=[]),this.segmentLengths||(this.segmentLengths=[]),this.props.measurement.disableLabels||(this.saveDrawState(),this.createMeasureTooltip("Polygon"===this.props.measurement.geomType?[0,0]:void 0),"Polygon"===this.props.measurement.geomType&&this.createMeasureTooltip(),"Polygon"===this.props.measurement.geomType&&this.createSegmentLengthOverlay()),this.listener=this.sketchFeature.getGeometry().on("change",(e=>{let t,s,r=e.target;if(r instanceof S.ZP){s={value:this.getArea(r),type:"area"},t=this.formatAreaValue(s.value,this.props.uom),this.tooltipCoord=r.getInteriorPoint().getCoordinates();const e=r.getCoordinates()[0];let o=[];if(!this.props.measurement.disableLabels&&((void 0===this.curPolygonLength||this.curPolygonLength<e.length)&&(this.createSegmentLengthOverlay(),this.curPolygonLength=e.length),e.length>2)){o.push((0,f.midpoint)(e[e.length-1],e[e.length-2],!0)),o.push((0,f.midpoint)(e[e.length-2],e[e.length-3],!0));for(let t=0;t<o.length;++t){const s=e.slice(e.length-2-t,e.length-t),r=this.getLength(s,this.props),i=this.props.measurement&&this.props.measurement.showLengthAndBearingLabel&&" | "+(0,T.rp)((0,f.calculateAzimuth)(s[0],s[1],Z(this.props.map)),this.props.measurement.trueBearing)||"",n=this.formatLengthValue(r,this.props.uom,!1)+i;this.segmentOverlayElements[this.segmentOverlays.length-t-1].innerHTML=n,this.segmentOverlays[this.segmentOverlays.length-t-1].setPosition(o[t]),this.segmentLengths[this.segmentOverlays.length-t-1]={value:r,type:"length"},this.textLabels[this.segmentOverlays.length-t-1]={text:n,position:(0,f.pointObjectToArray)((0,f.reproject)(o[t],Z(this.props.map),"EPSG:4326")),type:this.props.measurement.geomType,textId:this.textId}}}}else if(r instanceof P.Z){const e=r.getCoordinates(),o=[e[e.length-2],e[e.length-1]];this.props.measurement.disableLabels||this.props.measurement.bearingMeasureEnabled||!(void 0===this.curLineStringLength||this.curLineStringLength<e.length)||(this.createSegmentLengthOverlay(),this.curLineStringLength=e.length);const i=this.getLength(e,this.props),n=this.getLength(o,this.props);if(t=this.formatLengthValue(i,this.props.uom,"Bearing"===this.props.measurement.geomType,this.props.measurement.trueBearing),this.tooltipCoord=r.getLastCoordinate(),!this.props.measurement.disableLabels&&!this.props.measurement.bearingMeasureEnabled){const e=this.props.measurement&&this.props.measurement.showLengthAndBearingLabel&&" | "+(0,T.rp)((0,f.calculateAzimuth)(o[0],o[1],Z(this.props.map)),this.props.measurement.trueBearing)||"",t=this.formatLengthValue(n,this.props.uom,"Bearing"===this.props.measurement.geomType,this.props.measurement.trueBearing)+e;y()(this.segmentOverlayElements).innerHTML=t,y()(this.segmentOverlays).setPosition((0,f.midpoint)(o[0],o[1],!0)),this.textLabels[this.segmentOverlays.length-1]={text:t,position:(0,f.pointObjectToArray)((0,f.reproject)((0,f.midpoint)(o[0],o[1],!0),Z(this.props.map),"EPSG:4326")),type:this.props.measurement.geomType,textId:this.textId},this.segmentLengths[this.segmentOverlays.length-1]={value:n,type:"Bearing"===this.props.measurement.geomType?"bearing":"length"}}s={value:i,type:"Bearing"===this.props.measurement.geomType?"bearing":"length"}}if(!this.props.measurement.disableLabels&&(y()(this.measureTooltipElements).innerHTML=t,y()(this.measureTooltips).setPosition(this.tooltipCoord),this.outputValues[this.outputValues.length-1]=s,r instanceof S.ZP)){const e=r.getCoordinates()[0],t=this.getLength(3===e.length?c()(e):e,this.props);this.measureTooltipElements[this.measureTooltipElements.length-2].innerHTML=this.formatLengthValue(t,this.props.uom,!1),this.outputValues[this.measureTooltipElements.length-2]={value:t,type:"length"},this.perimeterTooltipCoord=r.getLastCoordinate(),this.measureTooltips[this.measureTooltipElements.length-2].setPosition(this.perimeterTooltipCoord)}}))})),t.on("drawend",(e=>{this.drawing=!1;const t=m()(this.props.measurement,"features",[]),s=e.feature.getGeometry(),r=s.getCoordinates(),o=new A.Z,i={Point:()=>(0,f.reproject)(r,Z(this.props.map),"EPSG:4326"),LineString:()=>this.getLength(r,this.props),Polygon:()=>this.getArea(s),Bearing:()=>(0,f.calculateAzimuth)(r[0],r[1],Z(this.props.map))},n={LineString:()=>this.formatLengthValue(this.getLength(r,this.props),this.props.uom,!1),Polygon:()=>this.formatAreaValue(this.getArea(s),this.props.uom),Bearing:()=>this.formatLengthValue((0,f.calculateAzimuth)(r[0],r[1],Z(this.props.map)),this.props.uom,!0,this.props.measurement.trueBearing)};let a=(0,f.reprojectGeoJson)(o.writeFeatureObject(e.feature.clone()),Z(this.props.map),"EPSG:4326");a.properties=a.properties||{},a.properties.values=[{value:(i[this.props.measurement.geomType]||(()=>null))(),formattedValue:(n[this.props.measurement.geomType]||(()=>null))(),position:(0,f.pointObjectToArray)((0,f.reproject)("Polygon"===this.props.measurement.geomType?s.getInteriorPoint().getCoordinates():y()(r),Z(this.props.map),"EPSG:4326")),type:this.props.measurement.pointMeasureEnabled?"point":this.props.measurement.lineMeasureEnabled?"length":this.props.measurement.areaMeasureEnabled?"area":this.props.measurement.bearingMeasureEnabled?"bearing":void 0},..."Polygon"===this.props.measurement.geomType?[{value:(this.outputValues[this.measureTooltipElements.length-2]||{}).value||0,formattedValue:this.formatLengthValue((this.outputValues[this.measureTooltipElements.length-2]||{}).value||0,this.props.uom,!1),position:(0,f.pointObjectToArray)((0,f.reproject)(y()(r[0]),Z(this.props.map),"EPSG:4326")),uom:this.props.uom,type:"length"}]:[]];let l={...a};if(this.props.measurement.lineMeasureEnabled){let e=l.geometry.coordinates,t=(0,f.transformLineToArcs)(e);if(!this.props.measurement.disableLabels){this.removeLastSegment();for(let s=0;s<e.length-1;++s){const r=t[100*s+50];r&&(this.textLabels[this.segmentOverlays.length-e.length+1+s].position=r,this.segmentOverlays[this.segmentOverlays.length-e.length+1+s].setPosition((0,f.pointObjectToArray)((0,f.reproject)(r,"EPSG:4326",Z(this.props.map)))))}}l=(0,b.t8)("geometry.coordinates",t,l)}else!this.props.measurement.disableLabels&&this.props.measurement.areaMeasureEnabled&&(this.textLabels.splice(this.segmentOverlays.length-2,1),this.props.map.removeOverlay(this.segmentOverlays[this.segmentOverlays.length-2]),this.segmentOverlayElements[this.segmentOverlays.length-2].parentNode.removeChild(this.segmentOverlayElements[this.segmentOverlays.length-2]),this.segmentOverlayElements.splice(this.segmentOverlays.length-2,1),this.segmentOverlays.splice(this.segmentOverlays.length-2,1));const h="bearing"===a.properties.values[0]?.type?"Bearing":a.geometry.type;if(a.geometry.textLabels=this.textLabels.filter((e=>e.type===h&&e.textId===this.textId)).map((e=>{let{textId:t,type:s,...r}=e;return r})),this.props.changeGeometry([...t,a]),this.props.setTextLabels([...this.textLabels]),this.addFeature(l),!this.props.measurement.disableLabels&&(y()(this.measureTooltipElements).className="tooltip tooltip-static",y()(this.measureTooltips).setOffset([0,-7]),"Polygon"===this.props.measurement.geomType&&(this.measureTooltipElements[this.measureTooltipElements.length-2].className="tooltip tooltip-static",this.measureTooltips[this.measureTooltipElements.length-2].setOffset([0,-7])),this.segmentOverlayElements))for(let e=0;e<this.segmentOverlayElements.length;++e)this.segmentOverlayElements[e]&&(this.segmentOverlayElements[e].className="segment-overlay segment-overlay-static");(0,B.B)(this.listener),this.curPolygonLength=void 0,this.curLineStringLength=void 0,this.discardDrawState()})),this.props.map.addInteraction(t),this.createHelpTooltip(),this.drawInteraction=t,this.measureLayer=this.vector})),k(this,"removeLastSegment",(()=>{this.textLabels.pop(),this.segmentLengths.pop(),this.props.map.removeOverlay(y()(this.segmentOverlays)),y()(this.segmentOverlayElements).parentNode.removeChild(y()(this.segmentOverlayElements)),this.segmentOverlays.pop(),this.segmentOverlayElements.pop()})),k(this,"removeDrawInteraction",(()=>{null!==this.drawInteraction&&(this.removeHelpTooltip(),this.props.map.removeInteraction(this.drawInteraction),this.drawInteraction=null,this.sketchFeature=null,this.props.map.un("click",(()=>this.updateMeasurementResults(this.props)),this),(0,B.B)(this.clickListener),this.props.updateOnMouseMove&&this.props.map.un("pointermove",(()=>this.updateMeasurementResults(this.props)),this))})),k(this,"pointerMoveHandler",(function(e){if(e.dragging)return;let t=(0,O.S$)(this.context.messages,"measureSupport.startDrawing");if(this.sketchFeature&&this.drawing){let e=this.sketchFeature.getGeometry();e instanceof S.ZP?t=this.continuePolygonMsg:e instanceof P.Z&&(t=this.continueLineMsg)}this.helpTooltipElement.innerHTML=t,this.helpTooltip.setPosition(e.coordinate),this.helpTooltipElement.classList.remove("hidden")})),k(this,"updateMeasurementResults",(e=>{if(!this.sketchFeature)return;let t=this.sketchFeature.getGeometry().getCoordinates();if("Bearing"===e.measurement.geomType&&t.length>1&&t.length>2){for(this.drawInteraction.sketchCoords_=[t[0],t[1],t[0]];this.sketchFeature.getGeometry().getCoordinates().length>3;)this.drawInteraction.removeLastPoint();this.sketchFeature.getGeometry().setCoordinates([t[0],t[1]]),this.drawInteraction.sketchFeature_=this.sketchFeature,this.drawInteraction.finishDrawing()}})),k(this,"reprojectedCoordinatesFrom4326",(e=>e.map((e=>{let t=(0,f.reproject)(e,"EPSG:4326",Z(this.props.map));return[t.x,t.y]})))),k(this,"reprojectedCoordinatesIn4326",(e=>e.map((e=>{let t=(0,f.reproject)(e,Z(this.props.map),"EPSG:4326");return[t.x,t.y]})))),k(this,"calculateGeodesicArea",(e=>{if(e.length>=4){const t=this.reprojectedCoordinatesIn4326(e);return Math.abs((0,N.bg)(new S.ZP([t]),{projection:"EPSG:4326"}))}return 0})),k(this,"createHelpTooltip",(()=>{this.removeHelpTooltip(),this.helpTooltipElement=document.createElement("div"),this.helpTooltipElement.className="tooltip hidden",this.helpTooltip=new M.Z({element:this.helpTooltipElement,offset:[15,0],positioning:"center-left"}),this.props.map.addOverlay(this.helpTooltip)})),k(this,"createMeasureTooltip",(function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[0,-15];e.measureTooltipElements||(e.measureTooltipElements=[]),e.measureTooltips||(e.measureTooltips=[]),e.outputValues||(e.outputValues=[]);let s=document.createElement("div");s.className="tooltip tooltip-measure",s.style.display=e.props.measurement.showLabel?"":"none",e.measureTooltipElements.push(s);let r=new M.Z({element:s,offset:t,positioning:"bottom-center"});e.props.map.addOverlay(r),e.measureTooltips.push(r),e.outputValues.push(null)})),k(this,"createSegmentLengthOverlay",(e=>{this.segmentOverlayElements||(this.segmentOverlayElements=[]),this.segmentOverlays||(this.segmentOverlays=[]);let t=document.createElement("div");t.className="segment-overlay",t.style.display=this.props.measurement.showSegmentLengths&&!e?"":"none",this.segmentOverlayElements.push(t);let s=new M.Z({element:t,offset:[0,0],positioning:"center-center"});this.props.map.addOverlay(s),this.segmentOverlays.push(s)})),k(this,"formatLengthValue",(function(t,s,r){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(r)return(0,T.rp)(t,o);const{label:i,unit:n}=s&&s.length,a=l()((0,T.Ov)(t,"m",n),2);return e.props.formatNumber(a)+" "+i})),k(this,"formatAreaValue",((e,t)=>{const{label:s,unit:r}=t&&t.area,o=l()((0,T.Ov)(e,"sqm",r),2);return this.props.formatNumber(o)+" "+s})),k(this,"removeHelpTooltip",(()=>{this.helpTooltipElement&&this.helpTooltipElement.parentNode&&this.helpTooltipElement.parentNode.removeChild(this.helpTooltipElement),this.helpTooltip&&this.props.map.removeOverlay(this.helpTooltip)})),k(this,"removeMeasureTooltips",(()=>{(this.measureTooltips||[]).forEach((e=>{this.props.map.removeOverlay(e)}));let e=document.getElementsByClassName("tooltip-static")||[];for(let t=0;t<e.length;t++)e[t].parentNode.removeChild(e[t]);e=document.getElementsByClassName("tooltip-measure")||[];for(let t=0;t<e.length;t++)e[t].parentNode.removeChild(e[t]);this.measureTooltips=[],this.measureTooltipElements=[],this.outputValues=[]})),k(this,"removeSegmentLengthOverlays",(()=>{(this.segmentOverlays||[]).forEach((e=>{this.props.map.removeOverlay(e)})),(this.segmentOverlayElements||[]).forEach((e=>{e.parentNode.removeChild(e)})),this.segmentOverlays=[],this.segmentOverlayElements=[]}))}UNSAFE_componentWillMount(){this.props.measurement.geomType&&(this.props.measurement.lineMeasureEnabled||this.props.measurement.areaMeasureEnabled||this.props.measurement.bearingMeasureEnabled)&&L()(this.drawControl)&&this.props.enabled&&this.addDrawInteraction(this.props)}UNSAFE_componentWillReceiveProps(e){if(this.measureTooltipElements&&e.measurement.showLabel!==this.props.measurement.showLabel)for(let t=0;t<this.measureTooltipElements.length;++t)this.measureTooltipElements[t]&&(this.measureTooltipElements[t].style.display=e.measurement.showLabel?"":"none");if(this.segmentOverlayElements&&e.measurement.showSegmentLengths)for(let t=0;t<this.segmentOverlayElements.length;++t)this.segmentOverlayElements[t]&&(this.segmentOverlayElements[t].style.display=e.measurement.showSegmentLengths?"":"none");(e.measurement.geomType&&e.measurement.geomType!==this.props.measurement.geomType||e.measurement.geomType&&(e.measurement.lineMeasureEnabled||e.measurement.areaMeasureEnabled||e.measurement.bearingMeasureEnabled)&&!this.props.enabled&&e.enabled)&&(this.restoreDrawState(),this.addDrawInteraction(e)),e.measurement.geomType||(this.cleanupMeasures(e),e.measurement.features&&e.measurement.features.length>0&&this.props.changeGeometry([]),e.measurement.textLabels&&e.measurement.textLabels.length>0&&this.props.setTextLabels([]));let t=this.props.measurement.features,s=e.measurement.features;e.measurement.updatedByUI&&!u()(t,s)?this.updateFeatures(e):e.measurement.updatedByUI&&!u()(this.props.uom,e.uom)&&this.updateMeasures(e)}componentWillUnmount(){this.cleanupMeasures()}render(){return null}}k(H,"propTypes",{startEndPoint:n().object,map:n().object,measurement:n().object,enabled:n().bool,uom:n().object,formatNumber:n().func,changeMeasurementState:n().func,updateMeasures:n().func,resetGeometry:n().func,changeGeometry:n().func,updateOnMouseMove:n().bool,setTextLabels:n().func}),k(H,"contextTypes",{messages:n().object}),k(H,"defaultProps",{changeMeasurementState:()=>{},resetGeometry:()=>{},updateMeasures:()=>{},changeGeometry:()=>{},formatNumber:e=>e,setTextLabels:()=>{},startEndPoint:{startPointOptions:{radius:3,fillColor:"green",applyToPolygon:!0},endPointOptions:{radius:3,fillColor:"red",applyToPolygon:!0}},updateOnMouseMove:!1})}}]);